// Generated by CoffeeScript 1.8.0
(function() {
  $(document).ready(function() {
    var $siteMenu, getBrowser;
    $siteMenu = $('.site-menu');
    $('.disable-anchors a').click(function(e) {
      e.preventDefault();
    });
    $('[data-href]').click(function(e) {
      var lastPath, locationArr, mainPath, pathObj;
      locationArr = window.location.pathname.split('/');
      lastPath = locationArr[locationArr.length - 1];
      mainPath = locationArr[locationArr.length - 2];
      pathObj = {};
      pathObj[mainPath] = lastPath;
      window.history.pushState(pathObj, '', lastPath);
      document.location.replace($(this).data('href'));
    });
    $('.menu-trigger').click(function(e) {
      e.preventDefault();
      $('.site-wrapper').toggleClass('menu-on');
      $('body').toggleClass('scroll-y-off');
    });
    $('#edit-submit.form-submit').addClass('atm-buscar');
    $('.language-link').addClass('atm-idiomas');
    getBrowser = function() {
      var match, matchVersion, navigatorObj, userAgentObj;
      navigatorObj = navigator.appName;
      userAgentObj = navigator.userAgent;
      matchVersion;
      match = userAgentObj.match(/(opera|chrome|safari|firefox|msie|trident)\/?\s*(\.?\d+(\.\d+)*)/i);
      if (match && (matchVersion = userAgentObj.match(/version\/([\.\d]+)/i)) !== null) {
        match[2] = matchVersion[1];
      }
      if (navigator.userAgent.match(/iPhone|Android|webOS|iPad/i)) {
        return match ? [match[1], match[2], mobile] : [navigatorObj, navigator.appVersion, mobile];
      }
      return match ? [match[1], match[2]] : [navigatorObj, navigator.appVersion, '-?'];
    };
    if (getBrowser()[1] === 'Trident' || 'Microsoft Internet Explorer') {
      $('.site-wrapper').addClass('ie');
    }
  });

}).call(this);
